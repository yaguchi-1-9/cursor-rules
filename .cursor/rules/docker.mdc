---
description: 
globs: 
alwaysApply: true
---
# Docker開発ルール

## 1. コンテナ管理
- コンテナ名はプロジェクト名を含める
- コンテナの状態は定期的に確認する
- 不要なコンテナは適宜削除する
- 開発環境のセットアップはDocker Composeを使用

## 2. ボリューム管理
- ホストとコンテナ間のファイル同期は必ずボリュームマウントを使用
- 開発用のソースコードはホスト側で管理
- データベースの永続化はボリュームを使用
- キャッシュやログファイルは適切なボリュームに保存

## 3. ネットワーク設定
- コンテナ間通信はDockerネットワークを使用
- ポートマッピングは明示的に指定
- セキュリティを考慮したネットワーク設定
- アプリケーションは http://localhost:8000 でアクセス可能

## 4. 環境変数管理
- 機密情報は.envファイルで管理
- 環境ごとの設定は.envファイルで切り替え
- 環境変数の命名規則を統一
- .env.exampleをテンプレートとして使用

## 5. ログ管理
- コンテナのログは適切に設定
- エラーログは即時確認
- ログローテーションを設定
- アプリケーションログは適切なレベルで出力

## 6. セキュリティ
- コンテナは最小権限で実行
- 不要なポートは公開しない
- イメージは定期的に更新
- セキュリティパッチは即時適用

## 7. 開発ワークフロー
- コード変更はホスト側で行う
- コンテナの再起動は必要最小限に
- テストはコンテナ内で実行
- 依存関係のインストールはコンテナ内で実行

## 8. トラブルシューティング
- コンテナのログを確認
- ネットワーク接続を確認
- ボリュームマウントを確認
- データベースの接続を確認

## 9. デプロイメント
- 本番環境はHerokuを使用

## 10. 課題
- ステージング環境と本番環境を分離
- デプロイメントは自動化
- ロールバック手順を準備
